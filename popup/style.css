@keyframes rotate {
	to {
		rotate: 360deg;
	}
}

@keyframes slide {
	to {
		left: 0;
	}
}

:root {
	--accent-color: #161b1f;
	--background-color: #1d2328;
	--border-color: hsl(200deg 40% 25% / 50%);
	--text-color: #fdfdfd;
	color-scheme: dark;
}

::placeholder {
	color: hsl(200deg 10% 50% / 50%);
}

::-webkit-scrollbar {
	height: 8px;
	width: 8px;
}

::-webkit-scrollbar-corner {
	display: none;
}

::-webkit-scrollbar-track {
	background-color: #0e111499;
	border-radius: 30px;
}

::-webkit-scrollbar-thumb {
	background-color: #232f38;
	border-radius: 30px;
}

::-webkit-scrollbar-thumb:hover {
	background-color: #303b44;
}

::-webkit-scrollbar-thumb:active {
	background-color: #3d4953;
}

html {
	background-color: var(--background-color);
	color: var(--text-color);
}

body {
	margin: 0.75rem;
	max-height: fit-content;
	overflow-y: auto;
	transition: all .2s;
	width: 200px;
}

#state, .danger, .safe {
	color: hsl(0deg 0% 100% / 50%);
	transition: all 200ms;
}

#state:hover {
	cursor: pointer;
}

#state::before {
	content: "Disabled";
}

#state:hover::before {
	content: "Click to enable";
}

#state, .danger {
	background-color: rgb(218, 34, 34, .2) !important;
}

.danger-border, .danger.hover-border:hover {
	box-shadow: inset 0px 0px 1px 1px hsl(0 60% 20% / 1);
}

#state.enabled, .safe {
	background-color: rgb(0, 167, 8, .2) !important;
}

#state.enabled::before {
	content: "Enabled";
}

#state.enabled:hover::before {
	content: "Click to disable";
}

#state.update-available::before {
	content: "Update";
}

#state.update-available:hover::before {
	content: "Click to update";
}

#state:hover:active, .danger:hover:active, .safe:hover:active {
	backdrop-filter: brightness(0.5);
}

body > nav {
	border-bottom: 1px solid var(--border-color);
	display: grid;
	font-family: roboto_medium, Arial, Helvetica, sans-serif;
	padding-bottom: 0.5rem;
	margin-bottom: 0.5rem;
}

body > nav:has(> :nth-child(4)) {
	grid-template-columns: repeat(2, 1fr);
}

a.button, button, details > summary, label {
	-webkit-user-select: none;
	background-color: transparent;
	border: none;
	border-radius: 8px;
	box-sizing: border-box;
	color: hsl(200deg 100% 90% / 50%);
	/* color: hsl(0deg 0% 100% / 75%); */
	display: block;
	overflow: hidden;
	padding: 0.5rem 1rem;
	position: relative;
	text-decoration: none;
	user-select: none;
}

a.tab, button.tab, details.tab > summary, details > summary.tab, label.tab {
	border-radius: 5px;
	/* color: hsl(0deg 0% 100% / 50%); */
	color: hsl(200deg 40% 75% / 50%);
	text-align: center;
	text-transform: capitalize;
	width: -webkit-fill-available;
}

details.tab > summary {
	list-style: none;
}

a:is(.button, .tab):hover, button:hover, label:hover, details.tab > summary:hover, details > summary.tab:hover, .keybind:hover {
	backdrop-filter: brightness(0.8);
	/* background:rgba(0, 0, 0, .2); */
	cursor: pointer;
}

.notification {
	padding-right: 2rem;
}

.notification::after {
	background-color: crimson;
	border-radius: 0.25rem;
	bottom: 0;
	color: var(--text-color);
	content: "!";
	font-family: system-ui;
	font-size: 0.75rem;
	font-weight: 800;
	height: 1rem;
	margin: auto;
	max-height: -webkit-fill-available;
	opacity: 0.8;
	padding: 0 0.3rem;
	position: absolute;
	right: 0.4rem;
	top: 0;
}

.disabled {
	-webkit-user-select: none;
	opacity: .5;
	pointer-events: none;
	user-select: none;
}

div.details {
	display: none;
	padding: 0.25rem;
	font-size: small;
	font-family: roboto_medium, Arial, Helvetica, sans-serif;
}

div.details > input:is([type="checkbox"], [type="radio"]) {
	display: none;
}

div.details:has(> input:is([type="checkbox"], [type="radio"]):checked) {
	display: block !important;
}

label > * {
	vertical-align: middle;
}

label:hover, button:hover, details.tab > summary:hover, details > summary.tab:hover, .keybind:hover {
	backdrop-filter: brightness(0.8);
	/* background:rgba(0, 0, 0, .2); */
	cursor: pointer;
}

label input:not(.override-pointer-events):not(input[type="text"]) {
	pointer-events: none;
	touch-action: none;
}

button.loading {
	box-shadow: inset 0 0 1px 2px rgba(0, 0, 0, .2) !important;
}

.loading {
	-webkit-user-select: none;
	color: transparent !important;
	opacity: 0.5;
	pointer-events: none;
	position: relative;
	transition: box-shadow 240ms;
	user-select: none;
}

.loading * {
	visibility: hidden;
}

.loading::after {
	animation: rotate 800ms cubic-bezier(.5, .5, .5, .5) infinite;
	background-color: transparent;
	border: 2px solid;
	border-color: white !important;
	border-bottom-color: transparent !important;
	border-radius: 50%;
	content: "";
	height: 0;
	inset: 0;
	margin: auto;
	padding: 0.25rem;
	position: absolute;
	width: 0;
}

.ripple {
	overflow: hidden;
}

.ripple::before {
	background-color: black;
	border-radius: 50%;
	content: "";
	left: calc(var(--offsetX) * 1px);
	opacity: 0;
	padding: 50%;
	pointer-events: none;
	position: absolute;
	scale: 2;
	top: calc(var(--offsetY) * 1px);
	translate: -50% -50%;
	transition: translate 800ms ease-out, scale 800ms, opacity 1s;
}

/* .ripple:not(.focus):active::before, .ripple.focus:not(:focus-within):active::before */
.ripple:is(:not(.focus), .focus:not(:focus-within)):active::before {
	opacity: .5;
	scale: 0;
	transition: 0s;
	translate: -50% -50%;
}